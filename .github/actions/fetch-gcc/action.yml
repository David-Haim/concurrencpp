name: Fetch GCC
description: Puts gcc's path into the output

inputs:
  version:
    description: Version of GCC to fetch
    required: true
  base-directory:
    description: Directory in which to install gcc
outputs:
  gcc:
    description: Path of gcc executable
    value: ${{ steps.script.outputs.gcc }}
  gplusplus:
    description: Path of g++ executable
    value: ${{ steps.script.outputs.gplusplus }}

runs:
  using: composite
  steps:
    - id: script
      shell: pwsh
      working-directory: ${{ inputs.base-directory }}
      run: |
        $version = ${{ inputs.version }}
        function Invoke-NativeCommand {
          $command = $args[0]
          $arguments = $args[1..($args.Length)]
          & $command @arguments
          if ($LastExitCode -ne 0) {
            Write-Error "Exit code $LastExitCode while running $command $arguments"
          }
        }
        if ($IsMacOs) {
        } elseif ($IsLinux) {
          if ($version -eq "HEAD") {
            # TODO $pkgs = @("gcc-${version}", "libc++-${version}-dev", "libc++abi-${version}-dev")
            # install Homebrew
            Invoke-NativeCommand CI=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            # install dependencies required for building gcc
            Invoke-NativeCommand sudo apt-get update
            Invoke-NativeCommand sudo apt-get install -y flex
            # install HEAD version of gcc
            Invoke-NativeCommand /home/linuxbrew/.linuxbrew/bin/brew install gcc --HEAD
            Add-Content "${env:GITHUB_OUTPUT}" "gcc=$((Get-Command gcc-${version}).Source)"
            Add-Content "${env:GITHUB_OUTPUT}" "gplusplus=$((Get-Command g++-${version}).Source)"
          }
        } elseif ($IsWindows) {
        }
